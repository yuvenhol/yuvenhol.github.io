<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工具 on yuvenhol的技术苦旅</title>
    <link>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/</link>
    <description>Recent content in 工具 on yuvenhol的技术苦旅</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>arthas</title>
      <link>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/arthas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/arthas/</guid>
      <description></description>
    </item>
    <item>
      <title>git</title>
      <link>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/git/</guid>
      <description>命令 命令 参数 描述 示例 checkout -b 检出一个新分支 checkout - 切换到上一个分支 branch -m 重命名分支 git branch -m 原始名称 新名称 branch -u &amp;ndash;set-upstream 设置当前分支对应的远程分支 git branch -u origin/dev branch &amp;ndash;unset-upstream 反向操作 git branch &amp;ndash;unset-upstream push -f 强制本地分支推送远程分支 push -u &amp;ndash;set-upstream push 并且 设置当前分支对应的远程分支 git branch &amp;ndash;unset-upstream origin [分支名] rebase 把一个分支整合到另一个分支的办法有两种：merge（合并） 和 rebase（衍合）。 rebase相当于在fetch之后，重新提交数据。 千万不要在在public分支操作rebase，例如develop，不要用rebase合并自己的feature分支。 有一篇很好的文章讲merge和rebase https://www.atlassian.com/git/tutorials/merging-vs-rebasing#the-golden-rule-of-rebasing
git工作流程 git flow 配置 ignore 注视 folder 同名的 folder 目录、src/folder 文件、src/utils/folder 文件都会被忽略，即：不会被提交到远程仓库中。 folder/ 只忽略文件夹 ! 表示取反，不忽略xxx 通配符 星号“*” ：匹配多个字符； 双星号“**” ：匹配多个字符； 问号“?</description>
    </item>
    <item>
      <title>idea</title>
      <link>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/idea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/idea/</guid>
      <description>编译大项目gc over limit 调整堆大小 keymap key note ctrl+space 代码补全 </description>
    </item>
    <item>
      <title>iredis</title>
      <link>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/iredis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/iredis/</guid>
      <description>redis 命令行客户端 https://gitee.com/mirrors/iredis#using-dsn</description>
    </item>
    <item>
      <title>jmeter</title>
      <link>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/jmeter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/jmeter/</guid>
      <description>bean shell </description>
    </item>
    <item>
      <title>markdown</title>
      <link>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/markdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/markdown/</guid>
      <description>绘图mermaid 时序图 sequenceDiagram participant mobile participant ucenter participant mysql loop mobile -&gt;&gt;+ ucenter:userCardRemote.queryCardByNo end</description>
    </item>
    <item>
      <title>maven</title>
      <link>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/maven/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/maven/</guid>
      <description>资料 官网 ：https://maven.apache.org/ 官方仓库浏览：https://mvnrepository.com/、https://search.maven.org/
功能 编译、打包、测试、依赖管理等
仓库 通常情况下企业内仓储依赖是
graph LR 本地仓库A &amp; 本地仓库B &amp; 本地仓库C --&gt; 企业私服Nexus--&gt;阿里云Nexus--&gt;中央仓库 其中repository Manager 企业内会用nexus等
文件规范 java 源文件：src/main/java
测试用例目录：src/test/java
输出文件： target/
配置文件： src/main/resources/
web：src/main/webapp
包含/WEB-INF/web.xml
pom 增加
&amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt; settings文件 settings文件有两处配置，总配置和用户
The Maven install: ${maven.home}/conf/settings.xml A user&amp;rsquo;s install: ${user.home}/.m2/settings.xml Servers 配置账号密码 sshkey等
1. `&amp;lt;servers&amp;gt;` 2. `&amp;lt;server&amp;gt;` 3. `&amp;lt;id&amp;gt;server001&amp;lt;/id&amp;gt;` 4. `&amp;lt;username&amp;gt;my_login&amp;lt;/username&amp;gt;` 5. `&amp;lt;password&amp;gt;my_password&amp;lt;/password&amp;gt;` 6. `&amp;lt;privateKey&amp;gt;${user.home}/.ssh/id_dsa&amp;lt;/privateKey&amp;gt;` 7. `&amp;lt;passphrase&amp;gt;some_passphrase&amp;lt;/passphrase&amp;gt;` 8. `&amp;lt;filePermissions&amp;gt;664&amp;lt;/filePermissions&amp;gt;` 9. `&amp;lt;directoryPermissions&amp;gt;775&amp;lt;/directoryPermissions&amp;gt;` 10. `&amp;lt;configuration&amp;gt;&amp;lt;/configuration&amp;gt;` 11. `&amp;lt;/server&amp;gt;` 12. `&amp;lt;/servers&amp;gt;` Mirrors 镜像：对repository的代理，默认的repository的id:central，所以一般mirrorOf会配置central,也可以是*，会对所有的repository替换。</description>
    </item>
    <item>
      <title>vim</title>
      <link>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yuvenhol.github.io/%E5%B7%A5%E5%85%B7/vim/</guid>
      <description>vim是一款无处不在、高可配置、编辑十分高效的文本编辑器。
虽然vim学习曲线很陡峭，但是学会了真的会带来快乐，这种感觉就像你可以从找人装修你的家，也可以自己搞，买材料、买装备、学习如何装修。
如果你并非整天与命令行打交道，那么学习vim给你带来的方便并不会太多，而且耗费的时间肯定是划不来的，但是学习的过程是快乐的！快乐就好。
vim 键位图 基础命令 移动动图 类型 按键 描述 保存&amp;amp;退出 ctrl+z|:q! 强制退出 :wq|:x|ZZ 保存退出 :w !sudo tee % 打开只读文件时保存 折叠 zo 打开 zc 关闭 zM 关闭所有 zR 打开所有 动作 &amp;lt;C-u&amp;gt;/ &amp;lt;C-u&amp;gt; 上/下一页 运算符 = 格式化代码 gU upper gu lower &amp;lt; / &amp;gt; 缩紧调整indent 视图模式 &amp;lt;C-v&amp;gt; 列选择 V 行选择 &amp;lt;C-v&amp;gt;+I/&amp;lt;C-v&amp;gt;$A 在行首/行尾添加内容 文本对象 存储个性化配置的vimrc 在～/.vimrc
插件 vim-camelsnek 驼峰和长蛇风格转换</description>
    </item>
  </channel>
</rss>