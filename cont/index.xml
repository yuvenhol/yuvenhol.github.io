<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Content on Hugo Relearn Theme</title>
    <link>https://example.com/cont/</link>
    <description>Recent content in Content on Hugo Relearn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://example.com/cont/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pages organization</title>
      <link>https://example.com/cont/pages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/cont/pages/</guid>
      <description>In Hugo, pages are the core of your site. Once it is configured, pages are definitely the added value to your documentation site.
Folders Organize your site like any other Hugo project. Typically, you will have a content folder with all your pages.
content ├── level-one │ ├── level-two │ │ ├── level-three │ │ │ ├── level-four │ │ │ │ ├── _index.md &amp;lt;-- /level-one/level-two/level-three/level-four │ │ │ │ ├── page-4-a.</description>
    </item>
    <item>
      <title>Archetypes</title>
      <link>https://example.com/cont/archetypes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/cont/archetypes/</guid>
      <description>Using the command: hugo new [relative new content path], you can start a content file with the date and title automatically set. While this is a welcome feature, active writers need more: archetypes. These are preconfigured skeleton pages with default frontmatter.
The Relearn theme defines some few archetypes of pages but you are free to define new ones to your liking. All can be used at any level of the documentation, the only difference being the layout of the content.</description>
    </item>
    <item>
      <title>Multilingual and i18n</title>
      <link>https://example.com/cont/i18n/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/cont/i18n/</guid>
      <description>The Relearn theme is fully compatible with Hugo multilingual mode.
It provides:
Translation strings for default values (English, Piratized English, Arabic, Simplified Chinese, Traditional Chinesse, Dutch, French, German, Hindi, Indonesian, Italian, Japanese, Korean, Polish, Portuguese, Russian, Spanish, Turkish, Vietnamese). Feel free to contribute! Automatic menu generation from multilingual content In-browser language switching Basic configuration After learning how Hugo handle multilingual websites, define your languages in your config.toml file.
For example with current English and Piratized English website.</description>
    </item>
    <item>
      <title>Markdown syntax</title>
      <link>https://example.com/cont/markdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/cont/markdown/</guid>
      <description>Let&amp;rsquo;s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages.
Markdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it.
Some of the key benefits are:
Markdown is simple to learn, with minimal extra characters so it&amp;rsquo;s also quicker to write content. Less chance of errors when writing in Markdown.</description>
    </item>
    <item>
      <title>Code highlighting</title>
      <link>https://example.com/cont/syntaxhighlight/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/cont/syntaxhighlight/</guid>
      <description>The Relearn theme uses Hugo&amp;rsquo;s built-in syntax highlighting for code.
Markdown syntax Wrap the code block with three backticks and the name of the language. Highlight will try to auto detect the language if one is not provided.
```json [ { &amp;#34;title&amp;#34;: &amp;#34;apples&amp;#34;, &amp;#34;count&amp;#34;: [12000, 20000], &amp;#34;description&amp;#34;: {&amp;#34;text&amp;#34;: &amp;#34;...&amp;#34;, &amp;#34;sensitive&amp;#34;: false} }, { &amp;#34;title&amp;#34;: &amp;#34;oranges&amp;#34;, &amp;#34;count&amp;#34;: [17500, null], &amp;#34;description&amp;#34;: {&amp;#34;text&amp;#34;: &amp;#34;...&amp;#34;, &amp;#34;sensitive&amp;#34;: false} } ] ``` Renders to:
[ { &amp;#34;title&amp;#34;: &amp;#34;apples&amp;#34;, &amp;#34;count&amp;#34;: [12000, 20000], &amp;#34;description&amp;#34;: {&amp;#34;text&amp;#34;: &amp;#34;.</description>
    </item>
    <item>
      <title>Menu extra shortcuts</title>
      <link>https://example.com/cont/menushortcuts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/cont/menushortcuts/</guid>
      <description>You can define additional menu entries or shortcuts in the navigation menu without any link to content.
Basic configuration Edit the website configuration config.toml and add a [[menu.shortcuts]] entry for each link your want to add.
Example from the current website:
[[menu.shortcuts]] name = &amp;#34;&amp;lt;i class=&amp;#39;fab fa-fw fa-github&amp;#39;&amp;gt;&amp;lt;/i&amp;gt; GitHub repo&amp;#34; identifier = &amp;#34;ds&amp;#34; url = &amp;#34;https://github.com/McShelby/hugo-theme-relearn&amp;#34; weight = 10 [[menu.shortcuts]] name = &amp;#34;&amp;lt;i class=&amp;#39;fas fa-fw fa-camera&amp;#39;&amp;gt;&amp;lt;/i&amp;gt; Showcases&amp;#34; url = &amp;#34;more/showcase/&amp;#34; weight = 11 [[menu.</description>
    </item>
    <item>
      <title>Icons and logos</title>
      <link>https://example.com/cont/icons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/cont/icons/</guid>
      <description>The Relearn theme for Hugo loads the Font Awesome library, allowing you to easily display any icon or logo available in the Font Awesome free collection.
Finding an icon Browse through the available icons in the Font Awesome Gallery. Notice that the free filter is enabled, as only the free icons are available by default.
Once on the Font Awesome page for a specific icon, for example the page for the heart, copy the HTML reference and paste into the Markdown content.</description>
    </item>
    <item>
      <title>Tags</title>
      <link>https://example.com/cont/tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/cont/tags/</guid>
      <description>The Relearn theme supports one default taxonomy of Hugo: the tag feature.
Configuration Just add tags to any page:
+++ tags = [&amp;#34;tutorial&amp;#34;, &amp;#34;theme&amp;#34;] title = &amp;#34;Theme tutorial&amp;#34; weight = 15 +++ Behavior The tags are displayed at the top of the page, in their insertion order.
Each tag is a link to a Taxonomy page displaying all the articles with the given tag.
List all the tags In the config.</description>
    </item>
  </channel>
</rss>